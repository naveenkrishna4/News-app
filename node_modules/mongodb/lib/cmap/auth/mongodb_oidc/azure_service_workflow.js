"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AzureServiceWorkflow = void 0;
const error_1 = require("../../../error");
const utils_1 = require("../../../utils");
const azure_token_cache_1 = require("./azure_token_cache");
const service_workflow_1 = require("./service_workflow");
/** Base URL for getting Azure tokens. */
const AZURE_BASE_URL = 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01';
/** Azure request headers. */
const AZURE_HEADERS = Object.freeze({ Metadata: 'true', Accept: 'application/json' });
/** Invalid endpoint result error. */
const ENDPOINT_RESULT_ERROR = 'Azure endpoint did not return a value with only access_token and expires_in properties';
/** Error for when the token audience is missing in the environment. */
const TOKEN_AUDIENCE_MISSING_ERROR = 'TOKEN_AUDIENCE must be set in the auth mechanism properties when PROVIDER_NAME is azure.';
/**
 * Device workflow implementation for Azure.
 *
 * @internal
 */
class AzureServiceWorkflow extends service_workflow_1.ServiceWorkflow {
    constructor() {
        super(...arguments);
        this.cache = new azure_token_cache_1.AzureTokenCache();
    }
    /**
     * Get the token from the environment.
     */
    async getToken(credentials